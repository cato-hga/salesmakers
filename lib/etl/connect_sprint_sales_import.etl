require 'etl/connect_sprint_sales_source'
require 'etl/sprint_sales_destination'

count = 0

source ConnectSprintSalesSource, 48.hours

def get_location c_bpartner_location_id
  return unless c_bpartner_location_id
  c_bpl = ConnectBusinessPartnerLocation.find c_bpartner_location_id || return
  location = Location.return_from_connect_business_partner_location c_bpl
  location ? location.id : nil
end

def get_person ad_user_id
  person = Person.find_by connect_user_id: ad_user_id
  person ? person.id : nil
end

star = Project.find_by name: 'STAR'
sprint_prepaid = Project.find_by name: 'Sprint Prepaid'

transform do |row|
  count += 1
  sale = Hash.new
  carrier = SprintCarrier.find_by name: row['carrier']
  sale[:sprint_carrier_id] = carrier ? carrier.id : nil
  sale[:comments] = row['comments']
  sale[:connect_sprint_sale_id] = row['rsprint_sales_id']
  sale[:created_at] = row['created'].remove_eastern_offset
  handset = carrier ? SprintHandset.find_by(sprint_carrier: carrier, name: row['model']) : nil
  sale[:sprint_handset_id] = handset ? handset.id : nil
  sale[:location_id] = get_location row['c_bpartner_location_id']
  sale[:meid] = row['meid']
  sale[:mobile_phone] = row['mobile_phone']
  if carrier && carrier.name == 'Sprint'
    sale[:project_id] = star.id
  else
    sale[:project_id] = sprint_prepaid.id
  end
  sale[:person_id] = get_person row['ad_user_id']
  sale[:phone_activated_in_store] = row['activated_in_store'] == 'Yes'
  sale[:picture_with_customer] = row['picture']
  rate_plan = carrier ? SprintRatePlan.find_by(sprint_carrier: carrier, name: row['rate_plan']) : nil
  if rate_plan
    rate_plan = rate_plan
  elsif carrier
    SprintRatePlan.find_by(name: 'Unknown', sprint_carrier: carrier)
  else
    rate_plan = nil
  end
  sale[:sprint_rate_plan_id] = rate_plan ? rate_plan.id : nil
  sale[:reason_not_activated_in_store] = row['reason_not_activated']
  sale[:sale_date] = row['date_sold'].remove_eastern_offset.to_date
  sale[:top_up_card_amount] = row['top_up_card_amount']
  sale[:top_up_card_purchased] = row['top_up_card_purchased'] == 'Yes'
  sale[:updated_at] = row['updated'].remove_eastern_offset
  sale[:upgrade] = row['upgrade'] == 'Y'
  sale[:five_intl_connect] = row['intl_connect_five'] == 'Y'
  sale[:ten_intl_connect] = row['intl_connect_ten'] == 'Y'
  sale[:insurance] = row['insurance'] == 'Y'
  sale[:virgin_data_share_add_on_amount] = row['addon_amount']
  sale[:virgin_data_share_add_on_description] = row['addon_description']

  sale
end

destination SprintSalesDestination

post_process do
  SlackJobNotifier.ping "[LegacySprintSaleImporting] Imported #{count.to_s} Sprint sales from RBD Connect." if count > 0
  ProcessLog.create process_class: "LegacySprintSaleImporting", records_processed: count
end