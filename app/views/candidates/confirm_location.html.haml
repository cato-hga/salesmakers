- title 'Confirm Location'

- location_area = @candidate.location_area
- location = location_area.location

.widget
  .inner
    %h3 Current Location
    %p
      The currently selected location is
      %strong= location.address
    %p
      %strong Area:
      = area_link @candidate.location_area.area
    - target = 0
    - potentials = 0
    - current = 0
    - target = location_area.target_head_count if location_area
    - potentials = location_area.potential_candidate_count if location_area
    - current = location_area.current_head_count if location_area
    - open = target - (current + potentials)
    - info_window = "#{location.channel.name}, #{location.display_name}".html_safe
    - info_window += " (##{location.store_number})<br><br>".html_safe
    - info_window += "#{location.address}<br><br>".html_safe
    - info_window += "<strong>Open: #{open}</strong>".html_safe
    #location_map
    %p
      %br/
      = link_to 'Change Location', select_location_candidate_path(@candidate, 'true'), class: [:button]
      = link_to 'Confirm Location', send_paperwork_candidate_path(@candidate), class: [:button, :inline_button, :alert], data: { confirm: 'This cannot be undone. Are you sure?' }
:javascript
  var markers = [];
  markers.push({
    "lat": #{html_escape(location.latitude)},
    "lng": #{html_escape(location.longitude)},
    "picture": {
      "url": "/images/#{location_area.area.project.name.gsub(' ', '').underscore}_logo_32x32.png",
      "width": 32,
      "height": 32
    },
    "infowindow": '#{info_window}'
  });
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {
    styles: mapStyle()
  }, internal: {id: 'location_map'}}, function () {
    handledMarkers = handler.addMarkers(markers);
    handler.map.centerOn(markers[0]);
    handler.getMap().setZoom(10);
  });