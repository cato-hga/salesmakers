.widget
  .inner
    %h3 Location Information
    - location = @candidate.location_area.location
    - location_area = @candidate.location_area
    %p
      %strong Area:
      = area_link(location_area.area)
    %p
      %strong Pay Rate:
      = location_area.hourly_rate ? number_to_currency(location_area.hourly_rate) : 'N/A'
    %p
      %strong Store #:
      = location.store_number if location.store_number
    %strong Store Address:
    = location.address
    %br
    %br
    - target = 0
    - potentials = 0
    - current = 0
    - target = location_area.target_head_count if location_area
    - potentials = location_area.potential_candidate_count if location_area
    - current = location_area.current_head_count if location_area
    - open = target - (current + potentials)
    - info_window = "#{location.channel.name}, #{location.display_name}".html_safe
    - info_window += " (##{location.store_number})<br><br>".html_safe
    - info_window += "#{location.address}<br><br>".html_safe
    - info_window += "<strong>Open: #{open}</strong>".html_safe
    #location_map
    -# unless Candidate.statuses[@candidate.status] >= Candidate.statuses[:onboarded]
    %p
      = link_to 'Change Location', select_location_candidate_path(@candidate, 'false'), class: [:button]

:javascript
  var markers = [];
- if @candidate.location_area
  :javascript
    markers.push({
      "lat": #{html_escape(location.latitude)},
      "lng": #{html_escape(location.longitude)},
      "picture": {
        "url": "/images/sprint_postpaid_logo_32x32.png",
        "width": 32,
        "height": 32
      },
      "infowindow": '#{info_window}'
    });
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {
      styles: mapStyle()
    }, internal: {id: 'location_map'}}, function () {
      handledMarkers = handler.addMarkers(markers);
      handler.map.centerOn(markers[0]);
      handler.getMap().setZoom(10);
    });