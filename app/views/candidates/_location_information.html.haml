.widget
  .inner
    %h3 Location Information
    - location = @candidate.location_area.location
    - location_area = @candidate.location_area
    %p
      %strong Area:
      = area_link(location_area.area)
    %strong Store Address:
    = location.address
    %br
    %br
    - if @training_location and not (@candidate.status == 'interviewed_scheduled' or @candidate.status == 'interviewed' or @candidate.status == 'rejected ')
      %strong Training Address:
      = @training_location.address + ', Room: ' + @training_location.room
      %br
      %br
      %p
        %strong Training Schedule:
        %br
        Monday, March 30th - Friday, April 3rd: 8am - 6pm
        %br
        Monday, April 6th - Thursday, April 9th: 8am - 6pm
      - if @training_location and @training_location.latitude and @training_location.longitude
        - distance = @training_location.geographic_distance(location).round(2)
        %p= 'Approx. distance from store: ' + "#{distance} miles".html_safe
        - if @candidate.confirmed?
          = button_to "Candidate can't make training due to distance?", cant_make_training_location_candidate_path(@candidate), data: { confirm: 'This will mark the candidates as unable to make their training. Are you sure?' }, class: [:button]
      - if @training_location.virtual
        %p This is a virtual training class. Details to come.
    - target = 0
    - potentials = 0
    - current = 0
    - target = location_area.target_head_count if location_area
    - potentials = location_area.potential_candidate_count if location_area
    - current = location_area.current_head_count if location_area
    - open = target - (current + potentials)
    - info_window = "#{location.channel.name}, #{location.display_name}".html_safe
    - info_window += " (##{location.store_number})<br><br>".html_safe
    - info_window += "#{location.address}<br><br>".html_safe
    - info_window += "<strong>Open: #{open}</strong>".html_safe
    #location_map
    %p
      = link_to 'Change Location', select_location_candidate_path(@candidate, 'false'), class: [:button]

- if @candidate.location_area
  :javascript
    var markers = [];
    markers.push({
      "lat": #{html_escape(location.latitude)},
      "lng": #{html_escape(location.longitude)},
      "picture": {
        "url": "/images/sprint_postpaid_logo_32x32.png",
        "width": 32,
        "height": 32
      },
      "infowindow": '#{info_window}'
    });
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {
      styles: mapStyle()
    }, internal: {id: 'location_map'}}, function () {
      handledMarkers = handler.addMarkers(markers);
      handler.map.centerOn(markers[0]);
      handler.getMap().setZoom(10);
    });

- if @training_location and not (@candidate.status == 'interviewed_scheduled' or @candidate.status == 'interviewed' or @candidate.status == 'rejected ')
  :javascript
    var markers = [];
    markers.push({
      "lat": #{html_escape(@training_location.latitude)},
      "lng": #{html_escape(@training_location.longitude)},
      "picture": {
        "url": "/images/store_map_marker.png",
        "width": 32,
        "height": 32
      },
    });
    markers.push({
      "lat": #{html_escape(location.latitude)},
      "lng": #{html_escape(location.longitude)},
      "picture": {
        "url": "/images/sprint_postpaid_logo_32x32.png",
        "width": 32,
        "height": 32
      },
    });
    markers.push({
      "lat": #{html_escape(@candidate.latitude)},
      "lng": #{html_escape(@candidate.longitude)},
      "picture": {
        "url": "/images/person_32x32.png",
        "width": 32,
        "height": 32
      },
    });
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {
      styles: mapStyle()
    }, internal: {id: 'location_map'}}, function () {
      handledMarkers = handler.addMarkers(markers);
      handler.map.centerOn(markers[0]);
      handler.getMap().setZoom(10);
    });
