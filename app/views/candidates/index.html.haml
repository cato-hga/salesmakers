- content_for :action_buttons do
  - new_button new_candidate_path
- content_for :header do
  = link_to icon('magnifying-glass'), '#', id: 'show_search'
  = search_form_for @search, id: 'search_form' do |f|
    = link_to "&times;".html_safe, '#', id: 'hide_search'
    = link_to 'Clear', request.path if params[:q]
    = f.text_field :first_name_cont, placeholder: 'First name'
    = f.text_field :last_name_cont, placeholder: 'Last name'
    = f.text_field :created_by_display_name_cont, placeholder: 'Entered by'
    = f.text_field :mobile_phone_number_cont, placeholder: 'Mobile'
    = f.text_field :email_cont, placeholder: 'Email'
    = f.text_field :zip_cont, placeholder: 'ZIP'
    %br/
    = f.text_field :location_area_area_project_name_cont, placeholder: 'Project'
    = f.text_field :location_area_location_channel_name_cont, placeholder: 'Channel'
    = f.text_field :location_area_location_display_name_cont, placeholder: 'Location'
    - selected_status = params['q'] ? params['q']['status_eq'] : nil
    - options = options_for_select(Candidate.statuses.map{|s| [NameCase(s[0].humanize), s[1]]}, selected_status)
    = f.select :status_eq, options, prompt: 'Status'
    = f.submit 'Search', class: [:button, :inline_button]
  .top-pagination
    = paginate @candidates

.widget
  .inner
    - headers = header_row ['Name', 'Entered By', 'Email', 'ZIP', 'Project', 'Channel', 'Location', 'Status', '']
    - rows = []
    - for candidate in @candidates do
      - name = candidate_link candidate
      - entered_by = person_link candidate.created_by
      - email = email_link candidate.email
      - zip = candidate.zip
      - project = candidate.location_area ? candidate.location_area.area.project.name : nil
      - channel = ''
      - location = ''
      - location_obj = candidate.location_area ? candidate.location_area.location : nil
      - channel = location_obj.channel.name if candidate.location_area
      - location = location_obj.display_name if candidate.location_area
      - status = ''
      - status = NameCase(candidate.status.humanize) if candidate.status
      - call_button = link_to 'Call', new_call_candidate_candidate_contacts_path(candidate), class: [:button, :inline_button]
      - onboard_button = link_to 'Onboard', new_from_candidate_people_path(candidate), class: [:button, :inline_button]
      - rows << table_row([name, entered_by, email, zip, project, channel, location, status, "#{call_button}&nbsp;#{onboard_button}".html_safe])
    = table headers, rows

- content_for :footer do
  = paginate @candidates