- page_title = @person.display_name.html_safe
- page_title = page_title + contact_link(@person) if @person.mobile_phone?
- title page_title

- if @person.areas.count > 0
  %ul.breadcrumbs
    - for area in @person.areas
      - project = area.project
      - client = project.client
      %li= link_to client.name, client
      %li= link_to project.name, client_project_path(client, project)
      - for parent_area in area.path
        %li= area_link(parent_area)

.widgets.poeple_about
  .widget.person_widget.centered_text
    .inner
      - position = @person.position
      - department = position.department if position
      %strong= @person.display_name
      -#%br
      -#= image_tag avatar_url(@person), class: 'avatar'
      %br
      %em= position.name if position
      %br

      - department = @person
      %em= department.name
  .widget.person_widget
    .inner
      %h3 Basic Information
      .comment.bottom_spacing
        = position.name if position
        - if @person.active?
          %span.comment.small.round.ok.label.inline_button Active
        - else
          %span.comment.small.round.bad.label.inline_button Inactive
      - if @show_wall
        - employments = @person.employments
        - if not @person.active? and employments.count > 0
          - first_employment = employments.first
          - employment_end = first_employment.end
          - if employment_end
            %p
              %strong Last Day Worked:
              - if employment_end.strftime('%Y').to_i < 2008
                Unknown
              - else
                = employment_end.strftime('%-m/%-d/%Y')
            %p
              %strong Termination Date:
              - if employment_end.strftime('%Y').to_i < 2008
                Unknown
              - else
                = first_employment.updated_at.strftime('%-m/%-d/%Y')
        - if employments.count > 0
          - first_employment = employments.first
          - employment_start = first_employment.start
          %p
            %strong Hire Date:
            = employment_start.strftime('%-m/%-d/%Y')
      - if @person.supervisor
        - supervisor = @person.supervisor
        %p
          %strong Supervisor:
          = link_to supervisor.display_name, supervisor
      %p
        %strong Email:
        = mail_to @person.email
      - if @person.personal_email and @show_wall
        %p
          %strong Personal Email:
          = mail_to @person.personal_email
      - if @person.mobile_phone? and @show_wall
        %p
          %strong Mobile Phone:
          = phone_link @person.mobile_phone, nil
      - if @person.office_phone?
        %p
          %strong Office Phone:
          = phone_link @person.office_phone, nil
      - if @person.home_phone?
        %p
          %strong Home Phone:
          = phone_link @person.home_phone, nil
  -#.widget.person_widget
  -#  .inner
  -#    %h3
  -#      - if @person == @current_person
  -#        About Me
  -#      - else
  -#        About
  -#        = @person.social_name
  -#    - profile = @person.profile
  -#    - if profile.bio
  -#      %p= profile.bio.gsub(/\n/, '<br/>').html_safe
  -#    - else
  -#      %p
  -#        %em
  -#          - if @person == @current_person
  -#            You have not written anything about yourself yet.
  -#          - else
  -#            = @person.social_name
  -#            has not written anything about themself yet.
  - if @physical_address
    .widget
      .inner
        %h3 Physical Address
        = @physical_address.line_1
        %br/
        - if @physical_address.line_2 and @physical_address.line_2.length > 0
          = @physical_address.line_2
          %br/
        = @physical_address.city + ', ' + @physical_address.state
        = @physical_address.zip
        #physical_address_map
    :javascript
      handler = Gmaps.build('Google');
      handler.buildMap({ provider: {
        styles: mapStyle()
      }, internal: {id: 'physical_address_map'}}, function () {
        marker = handler.addMarker({
          "lat": #{@physical_address.latitude},
          "lng": #{@physical_address.longitude}
        });
        // handler.bounds.extendWith(markers);
        // handler.fitMapToBounds();
        handler.map.centerOn(marker);
        handler.getMap().setZoom(10);
      });
  -#- if @profile_educations.count > 0
  -#  .widget.person_widget
  -#    .inner
  -#      %h3 Education
  -#      = render partial: 'profile_educations/listing', locals: { profile_educations: @profile_educations, current_person: @current_person }
  -#- if @profile_experiences.count > 0
  -#  .widget.person_widget
  -#    .inner
  -#      %h3 Experience
  -#      = render partial: 'profile_experiences/listing', locals: { profile_experiences: @profile_experiences, current_person: @current_person }
.widget
  .inner
    %h3 Current Devices
    = render partial: 'shared/device_deployments', locals: { current_devices: @current_devices }
.widget
  .inner
    %h3 Log Entries
    = render partial: 'shared/log_entries', locals: { log_entries: @log_entries }
.widget
  .inner
    %h3 Communication Log
    = render partial: 'shared/communication_log', locals: { communication_log_entries: @communication_log_entries }
