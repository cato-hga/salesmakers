- page_title = @person.display_name.html_safe
- page_title = page_title + contact_link(@person) if @person.mobile_phone? and @person.show_details? @visible_people and @current_person.position.hq?
- title page_title
- show_details = @person.show_details? @visible_people
- clients = @person.clients
- vonage = false
- postpaid = Project.find_by name: 'Sprint Postpaid'
- for client in clients do
  - vonage = true if client.name == 'Vonage'
= content_for :action_buttons do
  - if show_details
    - if vonage
      = button_to 'Commissions', commission_person_path(@person), class: [:button, :inline_button]
    - if ScreeningPolicy.new(@current_person, Screening.new).update?
      = link_to 'Edit Screening', edit_person_screening_path(@person), class: [:button, :inline_button]
    - if @person.candidate
      = link_to 'Candidate Profile', candidate_path(@person.candidate), class: [:button, :inline_button ]
  - if @person.projects.include? postpaid
    - if policy(@person).terminate?
      = link_to 'Terminate/NOS Person', new_person_docusign_nos_path(@person), id: '#nos_button', class: [:button, :inline_button]
    - if policy(@person).third_party_nos?
      = link_to 'Send NOS to SD', new_third_party_person_docusign_noses_path(@person), id: '#third_party_nos_button', class: [:button, :inline_button]

- if @person.areas.count > 0
  %ul.breadcrumbs
    - for area in @person.areas
      - project = area.project
      - client = project.client
      %li= client_link(client)
      %li= project_link(project)
      - for parent_area in area.path
        %li= area_link(parent_area)

.widgets.people_about
  .widget.person_widget
    .inner
      %h3 Basic Information
      .comment.bottom_spacing
        - position = @person.position
        = position.name if position
        - if @person.active?
          %span.comment.small.round.ok.label.inline_button Active
        - else
          %span.comment.small.round.bad.label.inline_button Inactive
      - if show_details
        - employments = @person.employments
        - if not @person.active? and employments.count > 0
          - first_employment = employments.first
          - employment_end = first_employment.end
          - if employment_end
            %p
              %strong Last Day Worked:
              - if employment_end.strftime('%Y').to_i < 2008
                Unknown
              - else
                = employment_end.strftime('%-m/%-d/%Y')
            %p
              %strong Termination Date:
              - if employment_end.strftime('%Y').to_i < 2008
                Unknown
              - else
                = first_employment.updated_at.strftime('%-m/%-d/%Y')
        - if employments.count > 0
          - first_employment = employments.first
          - employment_start = first_employment.start
          %p
            %strong Hire Date:
            = employment_start.strftime('%-m/%-d/%Y')
      - if @person.supervisor
        - supervisor = @person.supervisor
        %p
          %strong Supervisor:
          = link_to supervisor.display_name, supervisor
      %p
        %strong Email:
        = mail_to @person.email
      - if @person.personal_email and show_details
        %p
          %strong Personal Email:
          = mail_to @person.personal_email
      - if @person.mobile_phone? and show_details
        %p
          %strong Mobile Phone:
          = phone_link @person.mobile_phone, nil
      - if @person.office_phone?
        %p
          %strong Office Phone:
          = phone_link @person.office_phone, nil
      - if @person.home_phone? and show_details
        %p
          %strong Home Phone:
          = phone_link @person.home_phone, nil
  - physical_address = @person.physical_address
  - if physical_address and show_details
    .widget
      .inner
        %h3 Physical Address
        = physical_address.line_1
        %br/
        - if physical_address.line_2 and physical_address.line_2.length > 0
          = physical_address.line_2
          %br/
        = physical_address.city + ', ' + physical_address.state
        = physical_address.zip
        #physical_address_map
    :javascript
      handler = Gmaps.build('Google');
      handler.buildMap({ provider: {
        styles: mapStyle()
      }, internal: {id: 'physical_address_map'}}, function () {
        marker = handler.addMarker({
          "lat": #{html_escape(physical_address.latitude)},
          "lng": #{html_escape(physical_address.longitude)}
        });
        handler.map.centerOn(marker);
        handler.getMap().setZoom(10);
      });
- if show_details
  - if @person.department and @person.department.name.include?('Comcast')
    .widget#leads
      .inner
        - @person_show = true
        = render 'comcast_leads/widget'
    .widget#installations
      .inner
        = render 'comcast_sales/installations_widget'
  .widget
    .inner
      %h3 Current Devices
      = render partial: 'shared/device_deployments', locals: { current_devices: @person.devices }
  .widget
    .inner
      %h3 Log Entries
      = render partial: 'shared/log_entries', locals: { log_entries: @log_entries }
  .widget
    .inner
      %h3 Communication Log
      = render partial: 'shared/communication_log', locals: { communication_log_entries: @communication_log_entries }