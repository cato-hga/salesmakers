- title 'Management Scorecard for ' + @area.name

- green_sales = 1
- green_hps = 11.0
- green_refunds = 0

= render partial: 'shared/sales_wall_widget', locals: { object: @area }

- if @area.project.name == 'Vonage Retail'
  .widget
    .inner.row.full-width
      - people_totals = {}
      - total_sales = 0
      - total_hours = 0.0
      - total_refunds = 0
      - week_count = 0
      - @weeks.each do |week|
        - week_count += 1
        - week_total_sales = 0
        - week_total_hours = 0.0
        - week_total_refunds = 0
        .large-3.medium-6.columns{ id: week[3] }
          %h3= week[0]
          .row
            .small-4.columns
              %th SM
            .small-2.columns
              %th Sales
            .small-2.columns
              %th Hours
            .small-2.columns
              %th HPS/HPA
            .small-2.columns
              %th Refunds
          - for person in @people do
            - sales = person.vonage_sales.for_date_range(week[1], week[2]).count
            - hours = person.shifts.for_date_range(week[1], week[2]).sum(:hours)
            - hps = sales == 0 ? hours : hours / sales
            - refunds = person.vonage_refunds.for_date_range(week[1], week[2]).count
            - person_totals = people_totals[person] || { sales: 0, hours: 0.0, refunds: 0 }
            - person_totals[:sales] += sales
            - week_total_sales += sales
            - total_sales += sales
            - person_totals[:hours] += hours
            - week_total_hours += hours
            - total_hours += hours
            - person_totals[:refunds] += refunds
            - week_total_refunds += refunds
            - total_refunds += refunds
            - people_totals[person] = person_totals
            - sales_class = sales < green_sales && hours > 0.0 ? 'fail' : 'pass'
            - hps_class = hps <= green_hps ? 'pass' : 'fail'
            - refunds_class = refunds <= green_refunds ? 'pass' : 'fail'
            - if sales == 0 && hours == 0
              - sales_class, hps_class, refunds_class = 'fail', 'fail', 'fail'
            .row.vertical_space
              .small-4.columns.salesmaker= link_to person.display_name, person
              .columns.sales{class: "small-2 #{sales_class}"}= sales.to_s
              .columns.hours{class: "small-2 #{hps_class}"}= hours.round(2).to_s
              .columns.hps{class: "small-2 #{hps_class}"}= hps.round(2).to_s
              .columns.refunds{class: "small-2 #{refunds_class}"}= refunds.to_s
          .row.vertical_space.totals
            - hps = week_total_sales == 0 ? week_total_hours : (week_total_hours / week_total_sales).round(2)
            - sales_class = week_total_sales < green_sales && week_total_hours > 0.0 ? 'fail' : 'pass'
            - hps_class = hps <= green_hps ? 'pass' : 'fail'
            - refunds_class = week_total_refunds <= green_refunds ? 'pass' : 'fail'
            .small-4.columns TOTALS
            .columns.small-2.sales{class: sales_class}= week_total_sales.to_s
            .columns.small-2.hours{class: hps_class}= week_total_hours.round(2).to_s
            .columns.small-2.hps{class: hps_class}= week_total_sales == 0 ? week_total_hours : (week_total_hours / week_total_sales).round(2).to_s
            .columns.small-2.refunds{class: refunds_class}= week_total_refunds
    .clearfix
  .widget
    .inner#four_week_totals
      %h3 4-Week Totals
      .row.full-width
        .small-2.columns SM
        .small-2.columns Hired
        .small-2.columns Sales
        .small-2.columns Hours
        .small-2.columns HPS/HPA
        .small-2.columns Refunds
      - for person in @people do
        - person_totals = people_totals[person] || { sales: 0, hours: 0.0, refunds: 0 }
        - sales = person_totals[:sales]
        - hours = person_totals[:hours]
        - hps = sales == 0 ? hours : (hours / sales).round(2)
        - refunds = person_totals[:refunds]
        - sales_class = sales < green_sales && hours > 0.0 ? 'fail' : 'pass'
        - hps_class = hps <= green_hps ? 'pass' : 'fail'
        - refunds_class = refunds <= green_refunds ? 'pass' : 'fail'
        .row.full-width
          .small-2.columns.salesmaker= link_to person.display_name, person
          .small-2.columns.hired= person.hire_date ? short_date(person.hire_date) : ''
          .small-2.columns.sales{class: sales_class}= person_totals[:sales].to_s
          .small-2.columns.hours{class: hps_class}= person_totals[:hours].round(2).to_s
          .small-2.columns.hps{class: hps_class}= person_totals[:sales] == 0 ? person_totals[:hours].round(2).to_s : (person_totals[:hours] / person_totals[:sales]).round(2).to_s
          .small-2.columns.refunds{class: refunds_class}= person_totals[:refunds].to_s
      .row.full-width#grand_totals
        - hps = total_sales == 0 ? total_hours : (total_hours / total_sales).round(2)
        - sales_class = total_sales < green_sales && total_hours > 0.0 ? 'fail' : 'pass'
        - hps_class = hps <= green_hps ? 'pass' : 'fail'
        - refunds_class = total_refunds <= green_refunds ? 'pass' : 'fail'
        .small-2.columns TOTAL
        .small-2.columns
        .small-2.columns.sales{class: sales_class}= total_sales.to_s
        .small-2.columns.hours{class: hps_class}= total_hours.round(2).to_s
        .small-2.columns.hps{class: hps_class}= total_sales == 0 ? total_hours : (total_hours / total_sales).round(2).to_s
        .small-2.columns.refunds{class: refunds_class}= total_refunds.to_s